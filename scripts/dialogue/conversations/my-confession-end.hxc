import funkin.play.cutscene.dialogue.Conversation;
import funkin.play.PlayState;
import funkin.audio.FunkinSound;
import funkin.Paths;
import flixel.FlxG;
import flixel.FlxSprite;
import haxe.Unserializer;
import Std;
import StringTools;
import funkin.util.PlatformUtil;
import flixel.util.FlxSave;
import funkin.graphics.FunkinSprite;
import StringTools;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import funkin.modding.base.ScriptedFlxRuntimeShader;
import openfl.filters.ShaderFilter;
import flixel.addons.display.FlxRuntimeShader;
import openfl.utils.Assets;
import flixel.util.FlxTimer;

class MyConfessionEndConversation extends Conversation {

  function new() {
    super('my-confession-end');
  }

  var leftSpeaker:FunkinSprite;
  var rightSpeaker:FunkinSprite;
  var time:Int = 0;
	var staticShader = new FlxRuntimeShader(Assets.getText(Paths.frag("StaticShader")));
  var shader = new ShaderFilter(staticShader);

  override function onUpdate(event) {
    super.onUpdate(event);
    time++;
		staticShader.setFloat('iTime', time);
  }

  public function onDialogueCompleteLine(event:DialogueScriptEvent):Void
  {
    super.onDialogueCompleteLine(event);
    if (currentDialogueEntry == 8) {
      currentDialogueBox.set_speed(0.001);
    }
  }  

  override function playSpeakerAnimation(){
    var nextSpeakerAnimation:String = currentDialogueEntryData.speakerAnimation;
    var nextSpeakerId:String = currentDialogueEntryData.speaker;

    if (nextSpeakerAnimation == null) return;

    var character:String = switch (nextSpeakerId) {
      case 'yurileft', 'yuriright': 'yuri_';
      case 'sayorileft', 'sayoriright': 'sayori_';
      case 'natsukileft', 'natsukiright': 'natsuki_';
      case 'monikaleft', 'monikaright': 'monika_';
      case 'bfleft', 'bfright': 'bf_';
      case 'gfleft', 'gfright': 'gf_';

    }
    currentSpeaker.playAnimation(nextSpeakerAnimation);
    if (currentDialogueEntry == 8) {
      rightSpeaker.visible = false;
      FlxTween.tween(PlayState.instance.currentConversation.music, {volume: 0.0}, 1, {ease: FlxEase.linear});
    }
    if (currentDialogueEntry == 9) {
      PlayState.instance.disableKeys = true;
      PlayState.instance.camCutscene.filters = [shader];
      FunkinSound.playOnce(Paths.sound("glitchin"), 0.6);
        new FlxTimer().start(0.4, function(e:FlxTimer){
          currentDialogueBox.set_speed(1);
          currentDialogueBox.set_text(currentDialogueLineString);
          PlayState.instance.camCutscene.filters = [];
          PlayState.instance.disableKeys = false;
        });	      
    }
    if (StringTools.contains(nextSpeakerId, 'left')) {
      if (leftSpeaker.visible == false) leftSpeaker.visible = true;
      if (StringTools.contains(nextSpeakerId, 'bf') || StringTools.contains(nextSpeakerId, 'gf') || StringTools.contains(nextSpeakerId, 'mc') || StringTools.contains(nextSpeakerId, 'monika')) leftSpeaker.flipX = true;
      else leftSpeaker.flipX = false;
      leftSpeaker.loadGraphic(Paths.image('dialogue/portraits/' + character + nextSpeakerAnimation));
    }
    else {
      if (rightSpeaker.visible == false) rightSpeaker.visible = true;
      if (StringTools.contains(nextSpeakerId, 'bf') || StringTools.contains(nextSpeakerId, 'gf') || StringTools.contains(nextSpeakerId, 'mc') || StringTools.contains(nextSpeakerId, 'monika')) rightSpeaker.flipX = false;
      else rightSpeaker.flipX = true;
      rightSpeaker.loadGraphic(Paths.image('dialogue/portraits/' + character + nextSpeakerAnimation));
    }
  }

  public function onDialogueStart(event:DialogueScriptEvent):Void {
    super.onDialogueStart(event);
    if (leftSpeaker != null) leftSpeaker.visible = false;
    if (rightSpeaker != null) rightSpeaker.visible = false;
  }

  override function onCreate(event){
    super.onCreate(event);
    leftSpeaker = FunkinSprite.create(150, 50);
    leftSpeaker.setGraphicSize(Std.int(leftSpeaker.width * .9));
    leftSpeaker.zIndex = 290;
    leftSpeaker.updateHitbox();
    leftSpeaker.visible = false;
    leftSpeaker.scrollFactor.set();
    add(leftSpeaker);
    rightSpeaker = FunkinSprite.create(600, 50);
    rightSpeaker.setGraphicSize(Std.int(rightSpeaker.width * .9));
    rightSpeaker.zIndex = 290;
    rightSpeaker.flipX = true;
    rightSpeaker.updateHitbox();
    rightSpeaker.visible = false;
    rightSpeaker.scrollFactor.set();
    add(rightSpeaker);
    refresh();
  }
}