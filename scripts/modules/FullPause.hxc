import funkin.play.PlayState;
import funkin.play.event.SongEvent;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import funkin.modding.module.Module;
import funkin.modding.module.ModuleHandler;
import funkin.Preferences;
import flixel.util.FlxTimer;

class FullPause extends Module
{
    //Stole the code from Psych source lmao
    //Pause all tweens and timers when pausing

	var ddtoStages = ['schoolDDTO', 'schoolEvilDDTO', 'va11halla', 'clubroom', 'clubroomfestival', 'dokiglitcher', 'musicroom', 'evilClubroom', 'youandme', 'wilted', 'libitina', 'va11halla'];

    override function onPause(event) {
		super.onPause(event);
        //Make sure this only works on DDTO stages to prevent mod incompatibilities
		if (!ddtoStages.contains(PlayState.instance.currentStageId)) return;
		FlxTimer.globalManager.forEach(function(tmr:FlxTimer) if(!tmr.finished) tmr.active = false);
		FlxTween.globalManager.forEach(function(twn:FlxTween) if(!twn.finished) twn.active = false);
	}	
	
	//Prevent tweens from carrying over from a restart
	public function onSongRetry(event) {
		super.onSongRetry(event);
        //Make sure this only works on DDTO stages to prevent mod incompatibilities
		if (!ddtoStages.contains(PlayState.instance.currentStageId)) return;
		FlxTimer.globalManager.forEach(function(tmr:FlxTimer) if(!tmr.finished) tmr.finished = true);
		FlxTween.globalManager.forEach(function(twn:FlxTween) if(!twn.finished) twn.finished = true);
	}		

    //Resume all tweens and timers when returning
	override function onResume(event) {
		super.onResume(event);
        //Make sure this only works on DDTO stages to prevent mod incompatibilities
		if (!ddtoStages.contains(PlayState.instance.currentStageId)) return;
		FlxTimer.globalManager.forEach(function(tmr:FlxTimer) if(!tmr.finished) tmr.active = true);
		FlxTween.globalManager.forEach(function(twn:FlxTween) if(!twn.finished) twn.active = true);
	}
}