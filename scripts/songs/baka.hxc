import flixel.FlxG;
import funkin.play.PlayState;
import funkin.graphics.shaders.WiggleEffectRuntime;
import funkin.graphics.shaders.WiggleEffectType;
import flixel.addons.effects.FlxTrail;
import flixel.tweens.FlxTween;
import flixel.FlxSprite;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.graphics.FunkinSprite;
import flixel.tweens.FlxEase;
import funkin.Paths;
import funkin.play.song.Song;
import funkin.play.Countdown;
import funkin.util.Constants;
import funkin.Conductor;
import funkin.util.FlxTweenUtil;
import funkin.play.PlayStatePlaylist;

class BakaSong extends Song
{
	function new()
	{
		super('baka');
	}

	var bakaOverlay:FlxSprite;
	var shakeCamera:Bool = false;
	var hasPlayedIntroCutscene:Bool;

	//Planned to add the instrumental swapping from base game, but it sounded like shit
	//If you want to re-enable remove the /* and */ from the function below
	
	/*public override function listAltInstrumentalIds(difficultyId:String, variationId:String):Array<String> {
		switch (variationId) {
			case 'alt':
				return [""];
		  	default:
				return ['alt'];
		}  
	}*/

	override function onCreate(event) {
		super.onCreate(event);
		if (PlayState.instance == null || PlayState.instance.currentStage == null) return;
		if (PlayState.instance.isMinimalMode) return;

		hasPlayedIntroCutscene = false;
		
		bakaOverlay = new FlxSprite(0, 0);
		bakaOverlay.frames = Paths.getSparrowAtlas('clubroom/BakaBGDoodles');
		bakaOverlay.animation.addByPrefix('normal', 'Normal Overlay', 24, true);
		bakaOverlay.animation.addByPrefix('party rock is', 'Rock Overlay', 24, true);
		bakaOverlay.animation.addByPrefix('FUCK', 'Tank Overlay', 24, true);
		bakaOverlay.animation.play('normal');
		bakaOverlay.scrollFactor.set();
		bakaOverlay.zIndex = 400;
		bakaOverlay.alpha = 0;
		bakaOverlay.cameras = [PlayState.instance.camHUD];
		bakaOverlay.setGraphicSize(Std.int(FlxG.width));
		bakaOverlay.updateHitbox();
		bakaOverlay.screenCenter();
		PlayState.instance.add(bakaOverlay);
	}

	function calcSectionLength(duration:Int){
		var durSeconds = (Conductor.instance.stepLengthMs * (16 * duration)) / 1000;
		return durSeconds;
	}

	function onSongRetry(event:ScriptEvent)
		{
		  super.onSongRetry(event);
	  
		  hasPlayedIntroCutscene = true;
		}	  

	function startDialogue() {
		PlayState.instance.startConversation('baka');
	  }	

	function transitionToDialogue() {
		trace('Transitioning to dialogue.');
	
		PlayState.instance.camCutscene.visible = true;
	
		var black:FlxSprite = new FunkinSprite(-20, -20).makeSolidColor(FlxG.width * 1.5, FlxG.height * 1.5, 0xFF000000);
		black.cameras = [PlayState.instance.camCutscene];
		black.zIndex = 1000000;
		PlayState.instance.add(black);
	
		black.alpha = 1.0;
	
		FlxTween.tween(black, {alpha: 0}, 1, {
		  ease: FlxEase.linear,
		  startDelay: 0.25,
		  onComplete: function (input) {
	
			// black.visible = false;
			startDialogue();
		  }
		});
	  }	

	function onStepHit(event:SongTimeScriptEvent):Void
		{	
			switch(event.step)
			{
				case 64:
					FlxTween.tween(bakaOverlay, {alpha: 1}, calcSectionLength(2), {ease: FlxEase.sineOut});
				case 128:
					if (PlayState.instance.currentVariation != 'alt') PlayState.instance.camGame.shake(0.002, calcSectionLength(2));
					if (bakaOverlay.alpha != 1) FlxTween.tween(bakaOverlay, {alpha: 1}, calcSectionLength(1), {ease: FlxEase.sineOut});
					if (PlayState.instance.currentVariation == 'alt'){
						bakaOverlay.animation.play('FUCK');
						PlayState.instance.camHUD.flash(0xFFFDC1FF, calcSectionLength(0.2));
					}
					else bakaOverlay.animation.play('party rock is');
				case 448:
					FlxTween.tween(bakaOverlay, {alpha: 0}, calcSectionLength(2), {ease: FlxEase.sineOut});
				case 576:
					bakaOverlay.animation.play('normal');
					FlxTween.tween(bakaOverlay, {alpha: 1}, calcSectionLength(2), {ease: FlxEase.sineOut});
				case 704:
					if (bakaOverlay.alpha != 1) FlxTween.tween(bakaOverlay, {alpha: 1}, calcSectionLength(1), {ease: FlxEase.sineOut});
					if (PlayState.instance.currentVariation == 'alt'){
						bakaOverlay.animation.play('FUCK');
						PlayState.instance.camHUD.flash(0xFFFDC1FF, calcSectionLength(0.2));
					}
					else bakaOverlay.animation.play('party rock is');
			}
		}
	
	public function onCountdownStart(event):Void {
		super.onCountdownStart(event);
		bakaOverlay.alpha = 0;
		bakaOverlay.animation.play('normal');
		if (!PlayStatePlaylist.isStoryMode) hasPlayedIntroCutscene = true;
		if (!hasPlayedIntroCutscene) {
		  trace('Pausing countdown to play cutscene.');
	
		  hasPlayedIntroCutscene = true;
	
		  event.cancel(); // CANCEL THE COUNTDOWN!
	
		  transitionToDialogue();
		}		
	}
}